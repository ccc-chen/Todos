// Generated by CoffeeScript 2.1.1
  // import { ddbs as dd } from 'ddeyes'
var CFX, Content, Sider, enhance, getPropsChilden, hocMapProps,
  objectWithoutKeys = function(o, ks) { var res = {}; for (var k in o) ([].indexOf.call(ks, k) < 0 && {}.hasOwnProperty.call(o, k)) && (res[k] = o[k]); return res; },
  _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import {
  prefixDom
} from 'cfx.dom';

import {
  Layout
} from 'antd';

({Sider, Content} = Layout);

import {
  mapProps,
  compose
} from 'recompose';

CFX = prefixDom({Layout, Sider, Content});

getPropsChilden = (Obj) => {
  var children, props;
  ({children} = Obj);
  props = objectWithoutKeys(Obj, ['children']);
  return {props, children};
};

hocMapProps = mapProps((arg) => {
  var content, ownerProps, sider;
  ({sider, content} = arg);
  ownerProps = objectWithoutKeys(arg, ['sider', 'content']);
  sider = getPropsChilden(sider);
  content = getPropsChilden(content);
  return _extends({
    sider: _extends({}, sider, {
      className: 'ant-layout-has-sider'
    }),
    content
  }, ownerProps);
});

enhance = compose(hocMapProps);

export default enhance(({layout, sider, content}) => {
  var c_Content, c_Layout, c_Sider;
  ({c_Layout, c_Sider, c_Content} = CFX);
  return c_Layout(layout, c_Sider(sider.props, sider.children), c_Content(content.props, content.children));
});
