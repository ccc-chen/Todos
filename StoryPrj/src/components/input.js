// Generated by CoffeeScript 2.1.1
var CFX, StoryTodos, actions, mapActionToProps, mapStateToProps, reducers;

import {
  ddbs as dd
} from 'ddeyes';

import React, {
  Component
} from 'react';

import Input from '../../node_modules/StoryView/src/components/input';

import {
  prefixDom
} from 'cfx.dom';

import {
  connect
} from 'cfx.react-redux';

import {
  store
} from 'ReduxServ';

({actions, reducers} = store);

import {
  getState
} from './components';

CFX = prefixDom({Input});

StoryTodos = class StoryTodos extends Component {
  constructor(props) {
    super(props);
    this.state = {
      filter: props.state.filter
    };
    this;
  }

  componentWillReceiveProps(nextProps) {
    var filter;
    ({filter} = nextProps.state);
    this.setState({filter});
    this;
    return console.log(nextProps);
  }

  render() {
    var c_Input;
    ({c_Input} = CFX);
    return c_Input({
      filter: this.state.filter,
      selector: (function(filter) {
        return this.props.actions.filterSave({
          filter: filter
        });
      }).bind(this),
      blur: (function(v) {
        return this.props.actions.create({
          todo: v
        });
      }).bind(this)
    });
  }

};

mapStateToProps = function(state) {
  return getState(state.todosRedux);
};

mapActionToProps = {
  filterSave: actions.filterSave,
  create: actions.todosCreate
};

export default connect(mapStateToProps, mapActionToProps, StoryTodos);
