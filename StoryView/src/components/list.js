// Generated by CoffeeScript 2.1.1
var CFX, CheckboxItem, alert, list, prompt;

import {
  prefixDom
} from 'cfx.dom';

import React, {
  Component
} from 'react';

import {
  List,
  Checkbox,
  SwipeAction,
  Modal
} from 'antd-mobile';

({prompt, alert} = Modal);

CheckboxItem = Checkbox.CheckboxItem;

CFX = prefixDom({List, SwipeAction, CheckboxItem});

// prompt
list = class list extends Component {
  render() {
    var Delete, DeletePress, Patch, PatchPress, c_CheckboxItem, c_List, c_SwipeAction, hasClick, onChange, onPressDelete, onPressEdit, styleComp;
    ({c_List, c_CheckboxItem, c_SwipeAction} = CFX);
    hasClick = this.props.hasClick != null ? this.props.hasClick : (hasClick) => {
      console.log('pls run hasClick function!');
      return console.log(hasClick);
    };
    Delete = this.props.Delete != null ? this.props.Delete : (Delete) => {
      console.log('pls run Delete function!');
      return console.log(Delete);
    };
    Patch = this.props.Patch != null ? this.props.Patch : (Patch) => {
      console.log('pls run Patch function!');
      return console.log(Patch);
    };
    onChange = function(val) {
      return hasClick(val);
    };
    DeletePress = function(id) {
      return Delete(id);
    };
    PatchPress = function(id, todo) {
      return Patch(id, todo);
    };
    onPressEdit = function(id, todo) {
      console.log(id, todo);
      return prompt('defaultValue', 'defaultValue for prompt', [
        {
          text: 'Cancel'
        },
        {
          text: 'Submit',
          onPress: (value) => {
            return PatchPress(id,
        value);
          }
        }
      ], 'default', todo);
    };
    onPressDelete = function(id) {
      console.log('删除的id是:', id);
      return alert('Delete', 'Are you sure???', [
        {
          text: 'Cancel',
          onPress: () => {
            return console.log('cancel');
          }
        },
        {
          text: 'Ok',
          onPress: () => {
            return DeletePress(id);
          }
        }
      ]);
    };
    ({
      isClick: true
    });
    styleComp = function(isClick) {
      if (isClick === true) {
        return {
          textDecorationLine: 'line-through'
        };
      }
    };
    return c_List.apply(this, [
      {
        renderHeader: ' ',
        className: 'my-list'
      },
      ...(this.props.data.reduce((r,
      c) => {
        return [
          ...r,
          c_SwipeAction({
            right: [
              {
                text: '编辑',
                onPress: function() {
                  return onPressEdit(c.id,
              c.todo);
                },
                style: {
                  background: '#ddd',
                  color: 'white'
                }
              },
              {
                text: '删除',
                onPress: function() {
                  return onPressDelete(c.id);
                },
                style: {
                  background: '#F4333C',
                  color: 'white'
                }
              }
            ]
          },
          c_CheckboxItem({
            id: c.id,
            style: styleComp(this.props.isClick),
            onChange: function() {
              return onChange(c.id);
            },
            defaultChecked: false
          },
          c.todo))
        ];
      },
      []))
    ]);
  }

};

export default list;
