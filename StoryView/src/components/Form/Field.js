// Generated by CoffeeScript 2.1.1
  // import { ddbs as dd } from 'ddeyes'
var CFX, FormField, FormItem, enhance, getChildren, handleDecorator, hocMapProps,
  objectWithoutKeys = function(o, ks) { var res = {}; for (var k in o) ([].indexOf.call(ks, k) < 0 && {}.hasOwnProperty.call(o, k)) && (res[k] = o[k]); return res; },
  _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import {
  Form
} from 'antd';

FormItem = Form.Item;

import {
  prefixDom
} from 'cfx.dom';

import {
  mapProps,
  compose
} from 'recompose';

CFX = prefixDom({FormItem});

handleDecorator = ({decorator, name, props, children}) => {
  return (decorator(name, props))(children);
};

getChildren = (children) => {
  if (children.decorator != null) {
    return handleDecorator(children);
  } else if (Array.isArray(children)) {
    return children.reduce((r, c) => {
      return [...r, c.decorator != null ? handleDecorator(c) : c];
    }, []);
  } else {
    return children;
  }
};

hocMapProps = mapProps((arg) => {
  var children, otherProps;
  ({children} = arg);
  otherProps = objectWithoutKeys(arg, ['children']);
  return _extends({}, otherProps, {
    children: getChildren(children)
  });
});

enhance = compose(hocMapProps);

FormField = enhance((props) => {
  var c_FormItem;
  ({c_FormItem} = CFX);
  return c_FormItem(props);
});

export default FormField;
